LINKMULTI = Count; defines how many of each type of card should be included
LINK = "littlePeopleDeck.csv"
UNIT = INCH
PAGE = 8.5, 11, PORTRAIT

BORDER = ROUNDED, #228B22, 0.3; #228B22 = forest green

VISUAL=HV, 30, 24
FONT=Book Antiqua,16,,#000000
;NAME
;(NAME)
;returns number of elements in NAME -> First input is range = 1-n(locked)
TEXT="1-{(NAME)}",[NAME],0%,2.18%,100%,8.43%,CENTER
;IMAGE(locked)
;Future: Possibly use DIRFILES to load an image where the file names matches card name
IMAGE="1-{(IMAGE)}",[IMAGE],27.015%,10.029%,46.841%,31.395%
EDGE=,SOLID
;Rectangle(locked)
;Future: Use conditional to set border color based on card type. See page 23
RECTANGLE=,0%,0%,100%,100%,#002366,EMPTY,0.2
FONT=Book Antiqua,10,,#000000
;[s]Future: Use sequence  ="M+|A+|D+" plus frame to define scores
;M1 (locked)
TEXT=,M+,63.399%,45.785%,10.022%,4.07%
;Text(locked)
TEXT="1-{(M1)}",[M1],72.985%,45.785%,3.922%,4.07%
;A1(locked)
TEXT=,A+,51.634%,50%,10.022%,4.07%
TEXT="1-{(A1)}",[A1],61.002%,50%,3.922%,4.07%
;D1(locked)
TEXT=,D+,74.946%,50%,10.022%,4.07%
TEXT="1-{(D1)}",[D1],84.532%,50%,3.922%,4.07%
LINE=,5.229%,43.605%,92.593%,43.605%,#000000,0.005
;M2
TEXT=,M+,63.399%,70.785%,10.022%,4.07%
TEXT="1-{(M2)}",[M2],72.985%,70.785%,3.922%,4.07%
;A2
TEXT=,A+,51.634%,75%,10.022%,4.07%
TEXT="1-{(A2)}",[A2],61.002%,75%,3.922%,4.07%
;D2
TEXT=,D+,74.946%,75%,10.022%,4.07%
TEXT="1-{(D2)}",[D2],84.532%,75%,3.922%,4.07%
FONT=Book Antiqua,6,,#000000
;ABILITY_1
TEXT="1-{(ABILITY_1)}",[ABILITY_1],5.447%,58.285%,89.542%,12.064%,CENTER,WORDWRAP
LINE=,6.536%,70.349%,93.9%,70.349%,#000000,0.005
;ABILITY_2
TEXT="1-{(ABILITY_2)}",[ABILITY_2],5.229%,84.448%,89.542%,12.064%,CENTER,WORDWRAP
ENDVISUAL
; Simple spell pattern
;Future: Might be possible to auto-generate patterns. See 'Labels and sequences'
[frame]=FRAMEBOX(.40,1.6,0.45,0.45,0.09,0.09,C.,85)

[test] = stringsub([pattern_1],1)

;Works!
[pattern_1_str] = SCHEMA([pattern_1],1,,,PRODUCT(frame,((1))))
RECTANGLE=labelrange([pattern_1_str],@µ),<frame*>,#000000,#FFFFFF,0.1%

;; almost works
;[pattern_1_str] = PRODUCT(frame,[pattern_1])
;RECTANGLE=labelrange([pattern_1_str],@µ),<frame*>,#000000,#FFFFFF,0.1%

 ; doesn't work
;[pattern_1_str] = PRODUCT(frame,labelrange([pattern_1],@µ))
;RECTANGLE=labelrange([pattern_1_str],@µ),<frame*>,#000000,#FFFFFF,0.1%
;[pattern_1_str] = CONCAT(PRODUCT(frame,[pattern_1])) ;
;[pattern_debug2]=frame0101; frameA2 frameA3|frameB1 frameB2 frameB3
;rectangle=labelrange([pattern_debug2],@µ),<frame*>,#000000,#FFFFFF,0.1%

;;Works, from Nand:
;[frame]=FRAMEBOX(.40,1.6,0.45,0.45,0.09,0.09,C.,85)
;[pattern_debug2]=frame2.1 frame3.2 frame4.3|frame3.1 frame4.2 frame5.3
;rectangle=labelrange([pattern_debug2],@µ),<frame*>,#000000,#FFFFFF,0.1%

;Works, manually:
;RECTANGLE=,<frame[PATTERN_1]>,#000000,EMPTY,0.00
;RECTANGLE=1,<frame2.1>,#000000,EMPTY,0.00
;RECTANGLE=1,<frame3.2>,#000000,EMPTY,0.00
;RECTANGLE=1,<frame4.3>,#000000,EMPTY,0.00


;Complex spell pattern
[frame]=FRAMEBOX(0.40,2.51,0.45,0.45,0.09,0.09,C.,85)
RECTANGLE=,<frame*>,#000000,EMPTY,0.00